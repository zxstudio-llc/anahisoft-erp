import{r as u,j as l}from"./app-DQczwFTk.js";import{c as y}from"./index-KJ4lOR0W.js";import{P as v}from"./index-CnB8Y-kE.js";import{c as I}from"./utils-CPN-yreq.js";var d="Progress",p=100,[E,O]=y(d),[R,j]=E(d),f=u.forwardRef((r,e)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:b=w,...h}=r;(a||a===0)&&!c(a)&&console.error(_(`${a}`,"Progress"));const t=c(a)?a:p;o!==null&&!m(o,t)&&console.error(M(`${o}`,"Progress"));const s=m(o,t)?o:null,$=i(s)?b(s,t):void 0;return l.jsx(R,{scope:n,value:s,max:t,children:l.jsx(v.div,{"aria-valuemax":t,"aria-valuemin":0,"aria-valuenow":i(s)?s:void 0,"aria-valuetext":$,role:"progressbar","data-state":P(s,t),"data-value":s??void 0,"data-max":t,...h,ref:e})})});f.displayName=d;var g="ProgressIndicator",x=u.forwardRef((r,e)=>{const{__scopeProgress:n,...o}=r,a=j(g,n);return l.jsx(v.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:e})});x.displayName=g;function w(r,e){return`${Math.round(r/e*100)}%`}function P(r,e){return r==null?"indeterminate":r===e?"complete":"loading"}function i(r){return typeof r=="number"}function c(r){return i(r)&&!isNaN(r)&&r>0}function m(r,e){return i(r)&&!isNaN(r)&&r<=e&&r>=0}function _(r,e){return`Invalid prop \`max\` of value \`${r}\` supplied to \`${e}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${p}\`.`}function M(r,e){return`Invalid prop \`value\` of value \`${r}\` supplied to \`${e}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${p} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var N=f,V=x;const A=u.forwardRef(({className:r,value:e,...n},o)=>l.jsx(N,{ref:o,className:I("relative h-2 w-full overflow-hidden rounded-full bg-secondary",r),...n,children:l.jsx(V,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(e||0)}%)`}})}));A.displayName=N.displayName;export{A as P};
